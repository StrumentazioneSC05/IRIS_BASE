#this file should be located in /etc/httpd/conf.d/
#use form login to access web path with DB authentication

# mod_dbd configuration
DBDriver pgsql
DBDParams "host=localhost port=5432 dbname=iris_base user=apache password=aPach3_2018"

DBDPersist on
DBDMin  4
DBDKeep 8
DBDMax  20
DBDExptime 30


#DEVEL
<Location "/devel/dologin.html">
   SetHandler form-login-handler
   AuthFormLoginRequiredLocation "/devel/login.html?req=%{REQUEST_URI}?%{QUERY_STRING}"
   #AuthFormLoginSuccessLocation "/devel/common/area_utente.php"
   #provo a reindirizzare alla pagina richiesta invece che ad una statica:
   SetEnvIf Referer ^.*req=(.*)&?$ req=$1
   <If "-z %{ENV:req}">
     #se il riferimento ad un apgina precedente e' vuoto buttami qua:
     AuthFormLoginSuccessLocation "/devel/common/area_utente.php"
   </If>
   <If "-n %{ENV:req}">
     AuthFormLoginSuccessLocation %{ENV:req}
   </If>

   # core authentication and mod_auth_basic configuration for mod_authn_dbd

   AuthType form
   AuthName "SVR"
   AuthFormProvider dbd
   Session On
   SessionCryptoPassphrase secret
   SessionCookieName session path=/

   # don't require user to already be logged in!
   AuthDBDUserPWQuery "SELECT password FROM config.httpd_users WHERE username = %s AND active = 1"

   # dbd-login action executes a statement to log user in
   #Require dbd-login
   #AuthzDBDQuery "UPDATE tbl SET login = 'true' WHERE usr = %s"

   # return user to referring page (if any) after successful login
   AuthzDBDLoginToReferer On
</Location>

<Location "/devel/logout.html">
   SetHandler form-logout-handler
   AuthName "SVR"
   #AuthFormLogoutLocation "http://example.com/loggedout.html"
   AuthFormLogoutLocation "/devel/common/area_utente.php"
   Session On
   SessionMaxAge 1
   SessionCookieName session path=/
</Location>


<Location /var/www/IRIS_BASE/html/error.html>
  Allow from all
  Satisfy Any
</Location>

<Directory /var/www/IRIS_BASE/html/iris_base/>
  #Provo l'autenticazione via form:
  AuthType form
  AuthName "SVR"

  AuthFormProvider dbd
  ErrorDocument 401 "/devel/login.html?req=%{REQUEST_URI}?%{QUERY_STRING}"
  #auth_form_module authentication: http://httpd.apache.org/docs/trunk/mod/mod_auth_form.html
  AuthFormLoginRequiredLocation "/devel/login.html?req=%{REQUEST_URI}?%{QUERY_STRING}"

  Session On
  SessionCryptoPassphrase secret
  SessionCookieName session path=/

  #Require user iris_base
  #AuthDBDUserPWQuery "SELECT password FROM config.httpd_users WHERE username = %s AND active = 1"
  #Comandando il tutto da DB:
  Require valid-user
  AuthDBDUserPWQuery "SELECT a.password FROM config.httpd_users a, config.httpd_user_webgis b WHERE a.username = %s AND a.username = b.username AND b.webgis_name='iris_base' AND active = 1"
  # when a user fails to be authenticated or authorized, invite them to login; this page should provide a link to /team-private/login.html
  #ErrorDocument 401 /devel/error.html

  #per tenere traccia degli acccessi posso usare dbd-login, pero' fa accedere al percorso qualsiasi utente valido!
  #meglio gestire gli accessi via php con opportuni comandi...
  #<Files "iris_base.js">
  #  # dbd-login action executes a statement to log user in
  #  Require dbd-login
  #  #AuthzDBDQuery "UPDATE config.httpd_users SET login = 'true' WHERE username = %s"
  #  AuthzDBDQuery "INSERT INTO config.httpd_access(username) VALUES (%s)"
  #  # return user to referring page (if any) after successful login
  #  #AuthzDBDLoginToReferer On
  #</Files>
</Directory>

<Directory /var/www/IRIS_BASE/html/common/>
  #Provo l'autenticazione via form:
  AuthType form
  AuthName "SVR"

  AuthFormProvider dbd
  #ErrorDocument 401 /devel/login.html
  #auth_form_module authentication: http://httpd.apache.org/docs/trunk/mod/mod_auth_form.html
  AuthFormLoginRequiredLocation "/devel/login.html?req=%{REQUEST_URI}?%{QUERY_STRING}"

  Session On
  SessionCryptoPassphrase secret
  SessionCookieName session path=/

  Require valid-user
  AuthDBDUserPWQuery "SELECT password FROM config.httpd_users WHERE username = %s AND active = 1"
  # when a user fails to be authenticated or authorized, invite them to login; this page should provide a link to /team-private/login.html
  ErrorDocument 401 /devel/error.html
  #ErrorDocument 401 "<html><meta http-equiv=\"refresh\" content=\"0;url=/devel/error.html\"></html>"


  <Files "pannello_generale.php">
    #AuthType form
    #AuthName "SVR"
    #AuthFormProvider dbd
    #AuthFormLoginRequiredLocation "/devel/login.html?req=%{REQUEST_URI}?%{QUERY_STRING}"

    #Session On
    #SessionCryptoPassphrase secret
    #SessionCookieName session path=/
    #Require valid-user
    AuthDBDUserPWQuery "SELECT password FROM config.v_httpd_usergroup WHERE username = %s AND active = 1 AND groupname IN ('idrologia')"
    ErrorDocument 401 /devel/error.html
  </Files>

</Directory>

<Directory /var/www/IRIS_BASE/cgi-bin/>
  AuthType form
  AuthName "SVR"
  AuthFormProvider dbd
  #auth_form_module authentication: http://httpd.apache.org/docs/trunk/mod/mod_auth_form.html
  AuthFormLoginRequiredLocation "/devel/login.html?req=%{REQUEST_URI}?%{QUERY_STRING}"
  Session On
  SessionCryptoPassphrase secret
  SessionCookieName session path=/
  Require valid-user
  AuthDBDUserPWQuery "SELECT password FROM config.httpd_users WHERE username = %s AND active = 1"
</Directory>

#FINE DEVEL


#HTML normale
<Directory /var/www/html/common/>
  AuthType basic
  AuthName "Area privata"
  AuthBasicProvider dbd
  Require valid-user
  AuthDBDUserPWQuery "SELECT password FROM config.httpd_users WHERE username = %s AND active = 1"
</Directory>

<Directory /var/www/html/iris_base/>
  AuthType basic
  AuthName "Area privata"
  AuthBasicProvider dbd
  # mod_authz_core configuration for mod_authz_dbd to authenticate a group
  #Require dbd-group testNOgroup testgroupB
  #AuthzDBDQuery "SELECT groupname FROM config.v_httpd_usergroup WHERE username = %s AND active = 1 AND groupname IN ('testNOgroup', 'testgroupB')"
  # mod_authn_dbd SQL query to authenticate a user
  #AuthDBDUserPWQuery "SELECT password FROM config.v_httpd_usergroup WHERE username = %s AND active = 1 AND groupname IN ('testNOgroup', 'testgroupB')"

  #FORSE l'accesso per GRUPPI e' difficile da gestire in questo modo, forse e' meglio scegliere il gruppo solo con la SELECT e lasciando libero l'accesso a valid-user
  #Ad esempio:
  Require valid-user
  AuthDBDUserPWQuery "SELECT password FROM config.v_httpd_usergroup WHERE username = %s AND active = 1 AND groupname IN ('testNOgroup', 'testgroupB') LIMIT 1"
</Directory>

<Directory /var/www/cgi-bin/>
  AuthType basic
  AuthName "Area privata"
  AuthBasicProvider dbd
  Require valid-user
  AuthDBDUserPWQuery "SELECT password FROM config.httpd_users WHERE username = %s AND active = 1"
</Directory>


