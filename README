############## GIT UPDATE
To clone for the first time the repository to your local machine:
git clone https://github.com/StrumentazioneSC05/IRIS_BASE.git

To update locally the repository from the github server:
git pull

To check if your local version is up-to-date with the remote server, and see what is changed:
git remote -v update
git diff origin/master


############## INSTALL IRIS for the first time
Read the instruction in the README_eng_vx.txt file.


############## RUN DEVELOPMENT and PRODUCTION IRIS on same machine
Download the github version in the path /var/www/IRIS_BASE/.
To make operational your local development version, copy the third part libraries inside the new path, /var/www/IRIS_BASE/html, and the executable mapserv and tinyows from your production environment (/var/www/cgi-bin) to your development environment (/var/www/IRIS_BASE/cgi-bin):
cd /var/www/html
cp -r ext-3.4.0 flanis GeoExt GXM-0.1 Highcharts-3.0.9 Highstock-1.3.9 jQuery minify-2.1.7 ol2_exportmap ol_v3.14.2-dist OpenLayers-2.13.1 sencha-touch-1.1.1 suncalc-master ../IRIS_BASE/html/
cd /var/www/cgi-bin
cp tinyows mapserv ../IRIS_BASE/cgi-bin/


Any time you want update the remote repository with your local copy you must copy the files from production environment to the cloned local repository /var/www/IRIS_BASE/:

cd /var/www/html
cp -R common error.html goaccess_reports index.html info.php iris_base iris_base.html nonattivo.html sfondo_errore.png sfondo_index_html.png sfondo_nonattivo.png sfondo_webgis.png ../IRIS_BASE/html

cd /var/www/cgi-bin
cp *.py ../IRIS_BASE/cgi-bin/

Or just copy the modified files if you track them.

Then git commit the difference and upload to the server with git push.


############## SERVER TEST
To test this IRIS_BASE version modify:
vi /etc/httpd/conf/httpd.conf


By adding under the "<IfModule alias_module>" section the follow lines:

    ScriptAlias /devel/cgi-bin/ "/var/www/IRIS_BASE/cgi-bin/"
    Alias /devel "/var/www/IRIS_BASE/html"

And just outside this section:
    <Directory "/var/www/IRIS_BASE/html">
      Options +Indexes +FollowSymLinks +ExecCGI
      AddHandler php-fastcgi .php
      Action php-fastcgi /devel/cgi-bin/php.fastcgi
      AllowOverride None
      Require all granted
    </Directory>
    <Directory "/var/www/IRIS_BASE/cgi-bin">
      AllowOverride None
      Options +ExecCGI
      Require all granted
    </Directory>


Made executable the proper files in the path /var/www/IRIS_BASE/html and /var/www/IRIS_BASE/cgi-bin/ by entering each path and launch:
chmod +x .


Maybe the executable files inside the new cgi-bin directory coul not have the necessary permission mode.
To set, copy these settings from the "original" folder. For example launch:
ls -la --context /var/www/cgi-bin/

And then to set the new context authorization:
chown root:root /var/www/IRIS_BASE/cgi-bin/ /var/www/IRIS_BASE/html/
chown root:root /var/www/IRIS_BASE/cgi-bin/tinyows /var/www/IRIS_BASE/cgi-bin/mapserv

chcon system_u:object_r:httpd_sys_script_exec_t:s0 /var/www/IRIS_BASE/cgi-bin
chcon unconfined_u:object_r:httpd_sys_script_exec_t:s0 /var/www/IRIS_BASE/cgi-bin/*
chcon system_u:object_r:httpd_sys_content_t:s0 /var/www/IRIS_BASE/html/
chcon system_u:object_r:httpd_sys_content_t:s0 IRIS_BASE


If some problem persist, for example for mapserv, it could be useful to see the selinux log file or the journal file:
journalctl -b | grep "cgi"
sealert -a /var/log/audit/audit.log

Or if on the machine is installed ABRT (optional):
abrt-cli list

The command sealert will give you the solution, if any.
For example, for MapServer, could be necessary to launch:
 ausearch -c 'mapserv' --raw | audit2allow -M my-mapserv
 semodule -i my-mapserv.pp

For query_raster.py to query the WMS:
 ausearch -c 'query_raster.py' --raw | audit2allow -M my-queryrasterpy
 semodule -i my-queryrasterpy.pp

In any case, restart the httpd service:
service httpd restart

 
############## DEVEL VERSION on MINIFY
To load correctly the minified version of some js and css, a modification in the min/config.php file is needed.

Change the variable "$min_symlinks" in:
 $min_symlinks = array(
    '/var/www/devel' => '/var/www/IRIS_BASE/html'
 );

Add:
 $min_serveOptions['minApp']['allowDirs'] = array(
    '//',                 // allow from the normal DOC_ROOT
    '/var/www/IRIS_BASE/html' // allow from our alias target
 );

If you want to execute some debug on Minify:
$min_allowDebugFlag = true; //to use the flag "&debug" at the end of the min call
$min_errorLogger = true; //to use the Mozilla's Firebug Fire-PHP


############## DEVEL VERSION
To test on the browser this devel version, you need to modify the file /var/www/IRIS_BASE/html/common/config.php, setting the variable:
root_dir_html = '/devel';

Same job to do in the mapfiles (for example for the SHAPEPATH) and other dependencies.

